/**
 * @Author         : David Nguy·ªÖn <davidnguyen67dev@gmail.com>
 * @CreatedDate    : 2024-06-25 11:03:00
 * @LastEditors    : David Nguy·ªÖn <davidnguyen67dev@gmail.com>
 * @LastEditDate   : 2024-06-25 21:24:08
 * @CopyRight      : Con ch√π ch√π ü•¥ü•¥
 **/

import { createParamDecorator, ExecutionContext } from '@nestjs/common';
import { Observable } from 'rxjs';
import { Request } from 'express';

/**
 * Decorator ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ theo d√µi khi k·∫øt n·ªëi HTTP b·ªã ƒë√≥ng.
 *
 * @param {unknown} data D·ªØ li·ªáu t√πy ch·ªçn ƒë∆∞·ª£c truy·ªÅn v√†o decorator.
 * @param {ExecutionContext} ctx Ng·ªØ c·∫£nh th·ª±c thi cung c·∫•p th√¥ng tin v·ªÅ y√™u c·∫ßu hi·ªán t·∫°i.
 * @returns {Observable<void>} M·ªôt observable ho√†n th√†nh khi k·∫øt n·ªëi b·ªã ƒë√≥ng.
 */
export const OnConnectionClosed = createParamDecorator(
  (data: unknown, ctx: ExecutionContext) =>
    new Observable((observer) => {
      const request = ctx.switchToHttp().getRequest<Request>();

      request.on('close', () => observer.complete());
    }),
);
