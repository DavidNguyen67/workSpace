/**
 * @Author         : David Nguy·ªÖn <davidnguyen67dev@gmail.com>
 * @CreatedDate    : 2024-06-22 22:18:00
 * @LastEditors    : David Nguy·ªÖn <davidnguyen67dev@gmail.com>
 * @LastEditDate   : 2024-06-22 23:52:52
 * @CopyRight      : Con ch√π ch√π ü•¥ü•¥
**/

package com.david.server.database.models.mysql;

import java.sql.Timestamp;
import java.util.Set;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;

@Entity
@Table(name = "sales_orders")
@Data
@EqualsAndHashCode(callSuper = true)
public class SalesOrdersEntity extends BaseEntity {
  @Column(name = "order_date", nullable = false)
  private Timestamp orderDate;

  @Column(nullable = false)
  private double total;

  /**
   * @CascadeType.ALL ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ √°p d·ª•ng c√°c thao t√°c (persist, merge,
   *                  remove,
   *                  refresh, detach)
   * 
   * @FetchType.LAZY ƒë∆∞·ª£c s·ª≠ d·ª•ng khi d·ªØ li·ªáu li√™n quan s·∫Ω ch·ªâ ƒë∆∞·ª£c t·∫£i khi c·∫ßn
   *                 thi·∫øt, t·ª©c l√† khi n√≥ th·ª±c s·ª± ƒë∆∞·ª£c truy c·∫≠p
   *                 t·ª´ th·ª±c th·ªÉ ch√≠nh ƒë·∫øn th·ª±c th·ªÉ li√™n quan.
   * 
   * @EqualsAndHashCode.Exclude ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ lo·∫°i tr·ª´ m·ªôt
   *                            tr∆∞·ªùng kh·ªèi vi·ªác t√≠nh
   *                            to√°n ph∆∞∆°ng th·ª©c equals v√† hashCode.
   * 
   * @ToString.Exclude ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ lo·∫°i tr·ª´ m·ªôt tr∆∞·ªùng kh·ªèi ph∆∞∆°ng th·ª©c
   *                   toString.
   */
  @ManyToOne(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
  @JoinColumn(name = "coupon_id") // th√¥ng qua kh√≥a ngo·∫°i user_id
  @EqualsAndHashCode.Exclude
  @ToString.Exclude
  private CouponsEntity coupon;

  @OneToOne(cascade = CascadeType.ALL, fetch = FetchType.LAZY) // ƒê√°nh d·∫•u c√≥ m·ªói quan h·ªá 1-1 v·ªõi Session
  @JoinColumn(name = "session_id", nullable = false) // Li√™n k·∫øt v·ªõi nhau qua kh√≥a ngo·∫°i session_id
  @EqualsAndHashCode.Exclude
  @ToString.Exclude
  private SessionsEntity session;

  @ManyToOne(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
  @JoinColumn(name = "user_id", nullable = false) // th√¥ng qua kh√≥a ngo·∫°i user_id
  @EqualsAndHashCode.Exclude
  @ToString.Exclude
  private UsersEntity user;

  @OneToMany(mappedBy = "salesOrders", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
  // MappedBy tr·ªè t·ªõi t√™n bi·∫øn salesOrders ·ªü trong CcTransactionsEntity.
  @EqualsAndHashCode.Exclude
  @ToString.Exclude
  private Set<CcTransactionsEntity> ccTransactions;

  @OneToMany(mappedBy = "salesOrders", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
  // MappedBy tr·ªè t·ªõi t√™n bi·∫øn salesOrders ·ªü trong OrderProductsEntity.
  @EqualsAndHashCode.Exclude
  @ToString.Exclude
  private Set<OrderProductsEntity> orderProducts;
}
